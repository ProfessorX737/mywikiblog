{"version":3,"sources":["pages/articles-viewer/tree-utils.js","redux/actionTypes.js","redux/reducers/view.js","redux/reducers/user.js","redux/reducers/index.js","redux/actions.js","common/history.js","constants/routes.js","common/localStorage.js","common/api-client.js","pages/articles-viewer/cell-utils.js","redux/view-middleware.js","redux/auth-actions.js","redux/auth-middleware.js","redux/store.js","components/app-bar.js","components/nav-pane.js","pages/articles-viewer/cell-tree.js","pages/articles-viewer/cell-handle.js","pages/articles-viewer/cell-wrapper.js","react-mathjax2/process.js","react-mathjax2/Node.js","react-mathjax2/Context.js","react-mathjax2/Text.js","react-mathjax2/index.js","pages/articles-viewer/code-block.js","pages/articles-viewer/render-markdown2.js","pages/articles-viewer/markdown-editor.js","pages/articles-viewer/markdown-cell.js","pages/articles-viewer/article.js","pages/articles-viewer/view-options.js","pages/articles-viewer/cell-tabs.js","pages/articles-viewer/articles-viewer.js","pages/articles-viewer/index.js","constants/theme.js","components/text-field.js","components/form-page.js","pages/login/index.js","App.js","index.js"],"names":["unflatten","path","obj","lastObj","reduce","accum","key","next","getUpdateAtPathOb","update","length","_path","lastIndex","pop","removeListItemAtPath","treeData","initialState","viewTree","id","currTabId","tabs","tabsView","children","cells","showScaffolding","mutateDeleteTabId","view","i","splice","simplifyView","getDefaultCellView","vid","isEditing","isExpanded","getToggleCellViewAttrUpdateOp","cellVid","attrKey","cellViews","oldCellView","getCellViewsUpdateOp","$merge","email","loggedIn","combineReducers","state","action","type","payload","viewPath","parentId","parentVid","newId","insertIndex","childCells","childVid","parentCellView","updateOp","$splice","cellId","content","$set","tabId","$push","tabIndex","isCurrTab","newCurrTabId","inc","direction","newView","flexFlow","uuidv1","newTabs","newChildren","store","tabView","newViewTree","newCells","updateOb","childIndex","childId","toParentId","fromParentId","fromIndex","toIndex","updateOb1","updateOb2","show","user","insertNewChildCellExpand","arguments","insertCells","toggleCellExpand","toggleCellEdit","splitView","setStore","fetchChildCellsToggleExpand","insertChildCellsToggleExpand","patchContentToggleEdit","deleteChild","focusNextCell","moveChildCell","setShowScaffolding","history","createBrowserHistory","routeStem","TOKEN_KEY","getView","localStorage","getItem","JSON","parse","axios","interceptors","response","use","res","error","console","log","data","Error","request","req","token","getToken","headers","Authorization","defaults","withCredentials","makeCellVid","count","cellVidToId","replace","handleDragStart","evt","dispatch","actions","handleDragEnd","get","params","ids","cellIds","then","cellList","mapCellList","catch","a","getState","reduceCellsToIds","push","assert","notDeepEqual","e","patch","fetchIds","post","index","newCell","_id","delete","storage","idToExpandMap","getViewIds","Object","keys","restoredView","recreateView","initStore","oldParentId","newParentId","childOldIndex","childNewIndex","forEach","cell","id2","viewIds","cellUtils","login","password","routes","setItem","removeItem","authActions","createStore","rootReducer","applyMiddleware","viewMiddleware","authMiddleware","connect","props","className","IconButton","edge","onClick","setNavMenuOpen","navMenuOpen","to","useStyles","makeStyles","navPane","display","height","overflowY","overflowX","backgroundColor","transition","flex","drawer","border","drawerExpanded","flexBasis","drawerPaper","position","drawerHeader","alignItems","justifyContent","NavPane","classes","clsx","Divider","CellTree","countCellId","cellIdCount","getCellIdCount","handleSort","srcElement","from","cellClassName","getAttribute","split","match","dragAndDropCellEffect","oldIndex","newIndex","cellIndex","this","CellTreeRecurse","isRoot","renderCell","setCellChildren","countCell","articlePxWidth","React","Component","isEmpty","cellid","cellvid","group","name","put","el","toChilds","options","pull","list","setList","style","width","viewId","handle","onSort","onStart","onEnd","map","child","defaultProps","cellData","ExpandMoreRounded","fontSize","color","ChevronRightRounded","ArrowDropDownRounded","ArrowRightRounded","refs","newCellIndex","CellWrapper","getRefKey","onKeyDown","stopPropagation","getIsCellBottomHidden","articleRef","scroll","top","scrollTop","left","scrollLeft","behavior","getIsCellTopHidden","shiftKey","contentRef","focus","preventScroll","getIsExpanded","childCount","postNewChildCellExpand","getParentCellData","getArticlePxWidth","clientWidth","wrapperRef","offsetTop","offsetHeight","parentNode","isDown","vidList","getCellVidList","idCount","Boolean","nextRefKey","document","getElementById","onContentRef","myRefKey","onFocusContent","setState","isFocused","scrollContentIntoView","block","clientHeight","scrollIntoView","inline","getContentClassname","ref","onBlur","onFocus","pendingScripts","pendingCallbacks","needsProcess","process","MathJax","script","callback","Hub","Queue","oldElementScripts","elementScripts","element","Reprocess","doProcess","types","ascii","tex","Node","typeset","prevProps","forceUpdate","nextProps","nextState","nextContext","clear","context","jax","getJaxFor","Remove","text","setScriptText","onRender","input","createElement","node","appendChild","textContent","contextTypes","PropTypes","object","string","Context","onLoad","Config","myHook","Register","StartupHook","unmounted","processSectionDelay","delay","didFinishTypeset","hubFn","loaded","MessageHook","message","onError","undefined","loadScript","noGate","Children","only","loading","childContextTypes","Text","refreshMathJax","Typeset","div","CodeBlock","language","value","vs2015","PureComponent","RenderMarkdown2","newProps","plugins","RemarkMathPlugin","htmlParser","renderers","math","inlineMath","code","asciimath2jax","useMathMLspacing","delimiters","preview","MarkdownEditor","updateCode","editor","initialCode","lineNumbers","mode","extraKeys","lineWrapping","smartIndent","setTimeout","getEditor","wrap","editorStyle","scrollBehavior","wrapperProps","cm","editorDidMount","onBeforeChange","onChange","onContentChange","preventDefault","source","renderStyle","setCellContent","Fragment","padding","onEditorKeyDown","Article","firstChild","first","lastChild","last","resized","myrefs","fetchChildCells","onBackgroundClick","handleWidth","handleHeight","onResize","Hmenu","withStyles","paper","zIndex","Menu","ViewOptions","handleMoreBtnClick","menuAnchor","currentTarget","onMenuClose","onSplitView","onDeleteView","deleteView","deleteMode","MoreVert","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","getContentAnchorEl","open","MenuItem","VerticalSplit","HorizontalSplit","CancelPresentation","CellTabs","onChangeTab","changeTab","setTabRef","pullMode","ntab","getTabKey","tabIdCount","onSetTabs","deepEqual","setTabs","handleDataOnDrag","dataTransfer","setData","stringify","handleTabAdd","tabViewJson","originalEvent","getData","setTabView","renderTabContent","tab","whiteSpace","minWidth","onCloseTab","closeTab","onWheel","delta","scrollbar","getScrollLeft","deltaY","autoHide","current","onAdd","isUserTab","borderRadius","_ArticlesViewer","_view","ArticlesViewer","mainStyles","spacing","x","lightTheme","textBackgroundColor","textColor","unfocusedTextColor","unfocusedSmallTextColor","unfocusedBackgroundColor","unfocusedBorderColor","unfocusedInputBorderColor","focusedBorderColor","focusedColor","headerBackground","formBackground","errorColor","dashboardBackground","buttonBorderColor","buttonFillColor","primaryButtonFillColor","secondaryButtonFillColor","maxFeedWidth","TextField","styled","MuiTextField","theme","Page","Form","form","Title","h1","Submit","Button","emphasize","darken","fade","Login","useState","errorMsg","setErrorMsg","setEmail","setPassword","handleSubmit","label","variant","target","App","articles","arg","listen","location","pathname","prevState","deepStrictEqual","exact","component","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.34e0c1dd.chunk.js","sourcesContent":["import update from \"immutability-helper\";\n\n/**\n * Turn an array of keys into a nested object of keys\n * @param {numer[]|string[]} path\n */\nexport function unflatten(path) {\n  let obj = {};\n  let lastObj = path.reduce((accum, key) => {\n    let next = {};\n    accum[key] = next;\n    return next;\n  }, obj);\n  return { obj, lastObj };\n}\n\n/**\n * Change the node's specified attribute at the path specified\n * @param {Object} params\n * @param {!Object[]}  params.treeData\n * @param {number[]|string[]} params.path - array of keys specifying location of node\n * @param {number|string} params.attrKey - the node's attribute to change\n * @param newAttrVal - new value assigned to the node's attrKey at path\n * @return {Object} - altered treeData\n */\nexport function changeNodeAttrAtPath({ treeData, path, attrKey, newAttrVal }) {\n  let { obj, lastObj } = unflatten(path);\n  lastObj[attrKey] = { $set: newAttrVal };\n  return update(treeData, obj);\n}\n\n/**\n * Do an update like from immutability-helper but at the path specified\n * @param {Object} params\n * @param {!Object[]}  params.treeData\n * @param {number[]|string[]} params.path - array of keys specifying location of node\n * @param {Object} params.update - update tree object same as immutability-helper update\n * @return {Object} - altered treeData\n */\nexport function updateAtPath({ treeData, path, update }) {\n  if(path.length === 0) {\n    return update(treeData, update);\n  }\n  const _path = [...path];\n  const lastIndex = _path.pop();\n  let { obj, lastObj } = unflatten(_path);\n  lastObj[lastIndex] = update;\n  return update(treeData, obj);\n}\n\nexport function getUpdateAtPathOb({ path, update }) {\n  if(path.length === 0) {\n    return update;\n  }\n  const _path = [...path];\n  const lastIndex = _path.pop();\n  let { obj, lastObj } = unflatten(_path);\n  lastObj[lastIndex] = update;\n  return obj;\n}\n\n/**\n * Set the node specified at path with a new node\n * @param {Object} params\n * @param {!Object[]}  params.treeData\n * @param {number[]|string[]} params.path - array of keys specifying location of node to set\n * @param {Object}  params.newNode - the new node to set\n * @return {Object} - altered treeData\n */\nexport function changeNodeAtPath({ treeData, path, newNode }) {\n  let { obj, lastObj } = unflatten(path);\n  lastObj[\"$set\"] = newNode;\n  return update(treeData, obj);\n}\n\n/**\n * Remove the node at the path specified\n * @param {Object} params\n * @param {!Object[]}  params.treeData\n * @param {number[]|string[]} params.path - array of keys specifying location of node\n * @return {Object} - altered treeData\n */\nexport function removeListItemAtPath({ treeData, path }) {\n  const _path = [...path];\n  const lastIndex = _path.pop();\n  let { obj, lastObj } = unflatten(_path);\n  lastObj[\"$splice\"] = [[lastIndex, 1]];\n  return update(treeData, obj);\n}\n\n/**\n * insert a node after the specified node at path\n * @param {Object} params\n * @param {!Object[]}  params.treeData\n * @param {number[]|string[]} params.path - array of keys specifying location of node\n * @param {Object}  params.newNode - the new node to insert\n * @return {Object} - altered treeData\n */\nexport function insertAfterListItemAtPath({ treeData, path, newNode }) {\n  const _path = [...path];\n  const lastIndex = _path.pop();\n  let { obj, lastObj } = unflatten(_path);\n  lastObj[\"$splice\"] = [[lastIndex + 1, 0, newNode]];\n  return update(treeData, obj);\n}\n\nexport function getValAtPath({ treeData, path }) {\n  let next = treeData;\n  for (let i = 0; i < path.length; i++) {\n    next = next[path[i]];\n    if (next === undefined) return next;\n  }\n  return next;\n}\n","// view action types\nexport const INSERT_NEW_CHILD_CELL_EXPAND = \"INSERT_NEW_CHILD_CELL_EXPAND\";\nexport const INSERT_CELLS = \"INSERT_CELLS\";\nexport const SET_CELL_CONTENT = \"SET_CELL_CONTENT\";\nexport const TOGGLE_CELL_EXPAND = \"TOGGLE_CELL_EXPAND\";\nexport const TOGGLE_CELL_EDIT = \"TOGGLE_CELL_EDIT\";\nexport const ADD_TAB = \"ADD_TAB\";\nexport const CLOSE_TAB = \"CLOSE_TAB\";\nexport const SPLIT_VIEW = \"SPLIT_VIEW\";\nexport const CHANGE_TAB = \"CHANGE_TAB\";\nexport const SET_TABS = \"SET_TABS\";\nexport const SET_CELL_CHILDREN = \"SET_CELL_CHILDREN\";\nexport const SET_STORE = \"SET_STORE\";\nexport const SET_TAB_VIEW = \"SET_TAB_VIEW\";\nexport const DELETE_VIEW = \"DELETE_VIEW\";\nexport const FETCH_CELLS = \"FETCH_CELLS\";\nexport const FETCH_CHILD_CELLS = \"FETCH_CHILD_CELLS\";\nexport const FETCH_CHILD_CELLS_TOGGLE_EXPAND = \"FETCH_CHILD_CELLS_TOGGLE_EXPAND\";\nexport const INSERT_CHILD_CELLS_TOGGLE_EXPAND = \"INSERT_CHILD_CELLS_TOGGLE_EXPAND\";\nexport const PATCH_CONTENT_TOGGLE_EDIT = \"PATCH_CONTENT_TOGGLE_EDIT\";\nexport const POST_NEW_CHILD_CELL_EXPAND = \"POST_NEW_CHILD_CELL_EXPAND\";\nexport const DELETE_CHILD = \"DELETE_CHILD\";\nexport const LOCAL_STORAGE_INIT = \"LOCAL_STORAGE_INIT\";\nexport const DRAG_AND_DROP_CELL_EFFECT = \"DRAG_AND_DROP_CELL_EFFECT\";\nexport const MOVE_CHILD_CELL = \"MOVE_CHILD_CELL\";\nexport const SHOW_SCAFFOLDING = \"SHOW_SCAFFOLDING\";\n\n// user action types\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const UPDATE_AUTH_STATUS = \"UPDATE_AUTH_STATUS\";","import update from \"immutability-helper\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport {\n  getUpdateAtPathOb,\n  removeListItemAtPath\n} from \"../../pages/articles-viewer/tree-utils\"\nimport * as types from \"../actionTypes\"\n\nconst initialState = {\n  viewTree: {\n    id: \"1\",\n    currTabId: 0,\n    tabs: [],\n    tabsView: {},\n    children: []\n  },\n  cells: {},\n  showScaffolding: false,\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.INSERT_NEW_CHILD_CELL_EXPAND: {\n      const {\n        view,\n        viewPath,\n        parentId,\n        parentVid,\n        newId,\n        insertIndex = 0,\n        childCells,\n      } = action.payload;\n      const childVid = `${newId}_1`;\n      let cellViews = { [childVid]: getDefaultCellView(childVid, true) };\n      // check if parentCellView exists\n      const parentCellView = view.tabsView[view.currTabId]?.[parentVid];\n      if (parentCellView) {\n        cellViews[parentVid] = {\n          ...parentCellView,\n          isExpanded: true\n        }\n      } else {\n        // parentCellView does not exist so make one\n        cellViews[parentVid] = {\n          ...getDefaultCellView(parentVid),\n          isExpanded: true\n        }\n      }\n      // cellViews has new parent and child cell views now\n      // so now we create the whole update object\n      let updateOp = {\n        cells: {\n          $merge: update(childCells, {\n            [parentId]: {\n              children: { $splice: [[insertIndex, 0, { id: newId }]] }\n            }\n          })\n        },\n        viewTree: getUpdateAtPathOb({\n          treeData: state.viewTree,\n          path: viewPath,\n          update: getCellViewsUpdateOp({\n            view,\n            cellViews\n          })\n        })\n      }\n      return update(state, updateOp)\n    }\n    case types.INSERT_CELLS: {\n      const {\n        cells\n      } = action.payload;\n      return update(state, {\n        cells: {\n          $merge: cells\n        }\n      })\n    }\n    case types.SET_CELL_CONTENT: {\n      const { cellId, content } = action.payload;\n      return update(state, {\n        cells: {\n          [cellId]: {\n            content: { $set: content }\n          }\n        }\n      });\n    }\n    case types.TOGGLE_CELL_EXPAND: {\n      const {\n        view,\n        viewPath,\n        cellVid\n      } = action.payload;\n      const updateOp = {\n        viewTree: getUpdateAtPathOb({\n          treeData: state.viewTree,\n          path: viewPath,\n          update: getToggleCellViewAttrUpdateOp({\n            view,\n            cellVid,\n            attrKey: \"isExpanded\"\n          })\n        })\n      }\n      return update(state, updateOp);\n    }\n    case types.TOGGLE_CELL_EDIT: {\n      const {\n        view,\n        viewPath,\n        cellVid,\n      } = action.payload;\n      const updateOp = {\n        viewTree: getUpdateAtPathOb({\n          treeData: state.viewTree,\n          path: viewPath,\n          update: getToggleCellViewAttrUpdateOp({\n            view,\n            cellVid,\n            attrKey: \"isEditing\"\n          })\n        })\n      }\n      return update(state, updateOp);\n    }\n    case types.ADD_TAB: {\n      const {\n        viewPath,\n        tabId\n      } = action.payload;\n      const updateOp = {\n        viewTree: getUpdateAtPathOb({\n          treeData: state.viewTree,\n          path: viewPath,\n          update: {\n            tabs: {\n              $push: [{ id: tabId }]\n            },\n            currTabId: {\n              $set: tabId\n            }\n          }\n        })\n      }\n      return update(state, updateOp);\n    }\n    case types.CLOSE_TAB: {\n      const {\n        view,\n        viewPath,\n        tabId,\n        tabIndex\n      } = action.payload;\n      const isCurrTab = view.currTabId === tabId;\n      let newCurrTabId = view.currTabId;\n      if (isCurrTab) {\n        const inc = tabIndex === view.tabs.length - 1 ? -1 : 1;\n        newCurrTabId = view.tabs[tabIndex + inc]?.id || 0;\n      }\n      const updateOp = {\n        viewTree: getUpdateAtPathOb({\n          treeData: state.viewTree,\n          path: viewPath,\n          update: {\n            tabs: {\n              $splice: [[tabIndex, 1]]\n            },\n            currTabId: { $set: newCurrTabId }\n          }\n        })\n      }\n      return update(state, updateOp);\n    }\n    case types.SPLIT_VIEW: {\n      const {\n        view,\n        viewPath,\n        direction,\n      } = action.payload;\n      const newView = {\n        id: view.id,\n        flexFlow: direction,\n        tabs: [],\n        tabsView: {},\n        children: [\n          { ...update(view, {}), id: uuidv1() },\n          {\n            ...initialState.viewTree,\n            id: uuidv1()\n          }\n        ]\n      }\n      const updateOp = {\n        viewTree: getUpdateAtPathOb({\n          treeData: state.viewTree,\n          path: viewPath,\n          update: {\n            $set: newView\n          }\n        })\n      }\n      return update(state, updateOp);\n    }\n    case types.CHANGE_TAB: {\n      const {\n        viewPath,\n        tabId\n      } = action.payload;\n      const updateOp = {\n        viewTree: getUpdateAtPathOb({\n          treeData: state.viewTree,\n          path: viewPath,\n          update: {\n            currTabId: {\n              $set: tabId\n            }\n          }\n        })\n      }\n      return update(state, updateOp);\n    }\n    case types.SET_TABS: {\n      const {\n        viewPath,\n        newTabs\n      } = action.payload;\n      const updateOp = {\n        viewTree: getUpdateAtPathOb({\n          treeData: state.viewTree,\n          path: viewPath,\n          update: {\n            tabs: {\n              $set: newTabs\n            }\n          }\n        })\n      }\n      return update(state, updateOp)\n    }\n    case types.SET_CELL_CHILDREN: {\n      const {\n        parentId,\n        newChildren\n      } = action.payload;\n      const updateOp = {\n        cells: {\n          [parentId]: {\n            children: {\n              $set: newChildren\n            }\n          }\n        }\n      }\n      return update(state, updateOp);\n    }\n    case types.SET_STORE: {\n      const {\n        store\n      } = action.payload;\n      const updateOp = {\n        $set: store\n      }\n      return update(state, updateOp);\n    }\n    case types.SET_TAB_VIEW: {\n      const {\n        viewPath,\n        tabView\n      } = action.payload;\n      const updateOp = {\n        viewTree: getUpdateAtPathOb({\n          treeData: state.viewTree,\n          path: viewPath,\n          update: {\n            tabsView: {\n              $merge: tabView\n            }\n          }\n        })\n      }\n      return update(state, updateOp);\n    }\n    case types.DELETE_VIEW: {\n      const {\n        viewPath\n      } = action.payload;\n      let newViewTree = removeListItemAtPath({\n        treeData: state.viewTree,\n        path: viewPath\n      })\n      newViewTree = simplifyView(newViewTree);\n      return {\n        ...state,\n        viewTree: newViewTree\n      };\n    }\n    case types.INSERT_CHILD_CELLS_TOGGLE_EXPAND: {\n      const {\n        view,\n        viewPath,\n        cellVid,\n        newCells\n      } = action.payload;\n      const updateOb = {\n        cells: {\n          $merge: newCells\n        },\n        viewTree: getUpdateAtPathOb({\n          treeData: state.viewTree,\n          path: viewPath,\n          update: getToggleCellViewAttrUpdateOp({\n            view,\n            cellVid,\n            attrKey: \"isExpanded\"\n          })\n        })\n      }\n      return update(state, updateOb);\n    }\n    case types.PATCH_CONTENT_TOGGLE_EDIT: {\n      const {\n        view,\n        viewPath,\n        cellVid,\n        cellId,\n        content\n      } = action.payload;\n      const updateOb = {\n        cells: {\n          [cellId]: {\n            content: {\n              $set: content\n            }\n          }\n        },\n        viewTree: getUpdateAtPathOb({\n          treeData: state.viewTree,\n          path: viewPath,\n          update: getToggleCellViewAttrUpdateOp({\n            view,\n            cellVid,\n            attrKey: \"isEditing\"\n          })\n        })\n      }\n      return update(state, updateOb);\n    }\n    case types.DELETE_CHILD: {\n      const {\n        parentId,\n        childIndex\n      } = action.payload;\n      const childId = state.cells[parentId].children[childIndex].id;\n      // create copy of the view and delete all tabs with id = childId\n      let viewTree = update(state.viewTree, {});\n      mutateDeleteTabId(viewTree, childId);\n      const updateOb = {\n        cells: {\n          [parentId]: {\n            children: {\n              $splice: [[childIndex, 1]]\n            }\n          }\n        },\n        viewTree: {\n          $set: viewTree\n        }\n      }\n      return update(state, updateOb);\n    }\n    case types.MOVE_CHILD_CELL: {\n      const {\n        toParentId,\n        fromParentId,\n        fromIndex,\n        toIndex,\n      } = action.payload;\n      const childId = state.cells[fromParentId].children[fromIndex].id;\n      const updateOb1 = {\n        cells: {\n          [fromParentId]: {\n            children: {\n              $splice: [[fromIndex, 1]]\n            }\n          },\n        }\n      }\n      const updateOb2 = {\n        cells: {\n          [toParentId]: {\n            children: {\n              $splice: [[toIndex, 0, { id: childId }]]\n            }\n          },\n        }\n      }\n      return update(update(state, updateOb1), updateOb2);\n    }\n    case types.SHOW_SCAFFOLDING: {\n      const { show } = action.payload;\n      return update(state, { showScaffolding: { $set: show } });\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst mutateDeleteTabId = (view, id) => {\n  for (let i = 0; i < view.tabs.length; i++) {\n    if (view.tabs[i].id === id) {\n      view.tabs.splice(i, 1);\n      break;\n    }\n  }\n  for (let i = 0; i < view.children.length; i++) {\n    mutateDeleteTabId(view.children[i], id);\n  }\n}\n\nconst simplifyView = view => {\n  if (view.children.length === 1) {\n    view = view.children[0];\n  }\n  for (let i = 0; i < view.children.length; i++) {\n    view.children[i] = simplifyView(view.children[i]);\n  }\n  return view;\n};\n\nconst getDefaultCellView = (vid, isEditing = false, isExpanded = false) => {\n  return {\n    vid,\n    isEditing,\n    isExpanded,\n  }\n}\n\nconst getToggleCellViewAttrUpdateOp = ({\n  view,\n  cellVid,\n  attrKey\n}) => {\n  let cellViews = {};\n  const oldCellView = view.tabsView[view.currTabId]?.[cellVid];\n  if (oldCellView) {\n    cellViews = {\n      [cellVid]: {\n        ...oldCellView,\n        [attrKey]: !oldCellView[attrKey]\n      }\n    }\n  } else {\n    // if the cellView does not exist yet then assume all its boolean props are set to false\n    cellViews = {\n      [cellVid]: {\n        ...getDefaultCellView(cellVid),\n        [attrKey]: true\n      }\n    }\n  }\n  return (\n    getCellViewsUpdateOp({\n      view,\n      cellViews\n    })\n  )\n}\n\nconst getCellViewsUpdateOp = ({\n  view,\n  cellViews\n}) => {\n  let update = {\n    tabsView: {}\n  }\n  // case types.when view.tabsView[currTabId] exists\n  if (view.tabsView[view.currTabId]) {\n    update.tabsView = {\n      [view.currTabId]: {\n        $merge: cellViews\n      }\n    }\n  } else {\n    // case types.when view.tabsView[currTabId] does not exist\n    update.tabsView = {\n      $merge: {\n        [view.currTabId]: cellViews\n      }\n    }\n  }\n  return update;\n}","import update from \"immutability-helper\";\n\nimport * as types from \"../actionTypes\";\n\nconst initialState = {\n  email: \"xavierpoon737@gmail.com\",\n  loggedIn: false,\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.LOGIN: {\n      const { email } = action.payload;\n      return update(state, { email: { $set: email ? email : state.email }, loggedIn: { $set: true } });\n    }\n    case types.LOGOUT: {\n      return update(state, { loggedIn: { $set: false } });\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport view from './view';\nimport user from './user';\n\nexport default combineReducers({\n  view,\n  user\n})","import * as types from \"./actionTypes\"\n\nexport function insertNewChildCellExpand({\n  view,\n  viewPath,\n  parentId,\n  parentVid,\n  newId,\n  insertIndex = 0,\n  childCells = {},\n}) {\n  return ({\n    type: types.INSERT_NEW_CHILD_CELL_EXPAND,\n    payload: arguments[0]\n  })\n}\n\nexport function postNewChildCellExpand({\n  view,\n  viewPath,\n  parentId,\n  parentVid,\n  insertIndex\n}) {\n  return ({\n    type: types.POST_NEW_CHILD_CELL_EXPAND,\n    payload: arguments[0]\n  })\n}\n\nexport function insertCells({\n  cells,\n}) {\n  return ({\n    type: types.INSERT_CELLS,\n    payload: arguments[0]\n  })\n}\n\nexport function setCellContent({\n  cellId, content\n}) {\n  return ({\n    type: types.SET_CELL_CONTENT,\n    payload: arguments[0]\n  })\n}\n\nexport function toggleCellExpand({\n  view,\n  viewPath,\n  cellVid\n}) {\n  return ({\n    type: types.TOGGLE_CELL_EXPAND,\n    payload: arguments[0]\n  })\n}\n\nexport function toggleCellEdit({\n  view,\n  viewPath,\n  cellVid\n}) {\n  return ({\n    type: types.TOGGLE_CELL_EDIT,\n    payload: arguments[0]\n  })\n}\n\nexport function addTab({\n  viewPath,\n  tabId\n}) {\n  return ({\n    type: types.ADD_TAB,\n    payload: arguments[0]\n  })\n}\n\nexport function closeTab({\n  view,\n  viewPath,\n  tabId,\n  tabIndex\n}) {\n  return ({\n    type: types.CLOSE_TAB,\n    payload: arguments[0]\n  })\n}\n\nexport function splitView({\n  view,\n  viewPath,\n  direction,\n}) {\n  return ({\n    type: types.SPLIT_VIEW,\n    payload: arguments[0]\n  })\n}\n\nexport function changeTab({\n  viewPath,\n  tabId\n}) {\n  return ({\n    type: types.CHANGE_TAB,\n    payload: arguments[0]\n  })\n}\n\nexport function setTabs({\n  viewPath,\n  newTabs\n}) {\n  return ({\n    type: types.SET_TABS,\n    payload: arguments[0]\n  })\n}\n\nexport function setCellChildren({\n  parentId,\n  newChildren\n}) {\n  return ({\n    type: types.SET_CELL_CHILDREN,\n    payload: arguments[0]\n  })\n}\n\nexport function setStore({\n  store\n}) {\n  return ({\n    type: types.SET_STORE,\n    payload: arguments[0]\n  })\n}\n\nexport function setTabView({\n  viewPath,\n  tabView\n}) {\n  return ({\n    type: types.SET_TAB_VIEW,\n    payload: arguments[0]\n  });\n}\n\nexport function deleteView({\n  viewPath\n}) {\n  return ({\n    type: types.DELETE_VIEW,\n    payload: arguments[0]\n  });\n}\n\nexport function fetchCells({\n  cellIds\n}) {\n  return ({\n    type: types.FETCH_CELLS,\n    payload: arguments[0]\n  })\n}\n\nexport function fetchChildCells({\n  cellId\n}) {\n  return ({\n    type: types.FETCH_CHILD_CELLS,\n    payload: arguments[0]\n  })\n}\n\nexport function fetchChildCellsToggleExpand({\n  view,\n  viewPath,\n  cellId,\n  cellVid,\n  isExpanded\n}) {\n  return ({\n    type: types.FETCH_CHILD_CELLS_TOGGLE_EXPAND,\n    payload: arguments[0]\n  })\n}\n\nexport function insertChildCellsToggleExpand({\n  view,\n  viewPath,\n  cellVid,\n  newCells\n}) {\n  return ({\n    type: types.INSERT_CHILD_CELLS_TOGGLE_EXPAND,\n    payload: arguments[0]\n  })\n}\n\nexport function patchContentToggleEdit({\n  view,\n  viewPath,\n  cellVid,\n  cellId\n}) {\n  return ({\n    type: types.PATCH_CONTENT_TOGGLE_EDIT,\n    payload: arguments[0]\n  })\n}\n\nexport function deleteChild({\n  parentId,\n  childIndex,\n  focusNextCell\n}) {\n  return ({\n    type: types.DELETE_CHILD,\n    payload: arguments[0]\n  })\n}\n\nexport function localStorageInit() {\n  return ({\n    type: types.LOCAL_STORAGE_INIT\n  })\n}\n\nexport function dragAndDropCellEffect({\n  oldParentId,\n  newParentId,\n  childOldIndex,\n  childNewIndex,\n}) {\n  return ({\n    type: types.DRAG_AND_DROP_CELL_EFFECT,\n    payload: arguments[0]\n  })\n}\n\nexport function moveChildCell({\n  toParentId,\n  fromParentId,\n  fromIndex,\n  toIndex,\n  childId,\n}) {\n  return ({\n    type: types.MOVE_CHILD_CELL,\n    payload: arguments[0]\n  })\n}\n\nexport function setShowScaffolding({\n  show,\n}) {\n  return ({\n    type: types.SHOW_SCAFFOLDING,\n    payload: arguments[0],\n  })\n}\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","export const domain = \"http://142.93.76.166\";\nexport const routeStem = `${domain}/api`;\n\nexport const home = \"/\";\nexport const login = \"/login\";","export const VIEW_KEY = 'xavierunderstandsview';\nexport const TOKEN_KEY = 'xavierunderstandstoken';\n\nexport const setView = (view) => {\n  localStorage.setItem(VIEW_KEY, JSON.stringify(view));\n}\n\nexport const getView = () => {\n  const view = localStorage.getItem(VIEW_KEY);\n  if(!view) return null;\n  return JSON.parse(view);\n}\n\nexport const setToken = (token) => {\n  localStorage.setItem(TOKEN_KEY, token);\n}\n\nexport const getToken = () => {\n  const token = localStorage.getItem(TOKEN_KEY);\n  if(!token) return '';\n  return token;\n}\n\nexport const deleteToken = () => {\n  localStorage.removeItem(TOKEN_KEY);\n}\n","import axios from 'axios';\nimport history from './history';\nimport store from '../redux/store';\nimport * as routes from '../constants/routes';\nimport { getToken } from './localStorage';\n\naxios.interceptors.response.use((res) => res, (error) => {\n  console.log(\"intercepted error: \" + error.response.data);\n  throw Error(error.response.data);\n});\n\naxios.interceptors.request.use((req) => {\n  const token = getToken();\n  req.headers.Authorization = token;\n  return req;\n});\n\naxios.defaults.withCredentials = true;\n\nexport default axios;","import store from '../../redux/store';\nimport * as actions from '../../redux/actions';\n\nexport const makeCellVid = ({ cellId, count }) => {\n  return `${cellId}_${count}`;\n}\n\nexport const cellVidToId = cellVid => {\n  return cellVid.replace(/_[0-9]+$/, '');\n}\n\nexport const getCellVidList = ({\n  cellId,\n  cells,\n  getIsExpanded,\n  idCount = {},\n  isRoot = true\n}) => {\n  let count = idCount[cellId];\n  count = Boolean(count) ? count + 1 : 1;\n  idCount[cellId] = count;\n  const cellVid = makeCellVid({ cellId, count });\n  let keys = isRoot ? [] : [cellVid];\n  if (isRoot || getIsExpanded(cellVid)) {\n    const children = cells[cellId].children;\n    for (let i = 0; i < children.length; i++) {\n      keys.push(...getCellVidList({\n        cellId: children[i].id,\n        cells,\n        getIsExpanded,\n        idCount,\n        isRoot: false\n      }));\n    }\n  }\n  return keys;\n};\n\nexport const handleDragStart = evt => {\n  store.dispatch(actions.setShowScaffolding({ show: true }));\n}\n\nexport const handleDragEnd = evt => {\n  store.dispatch(actions.setShowScaffolding({ show: false }));\n}","import * as types from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport axios from '../common/api-client';\nimport assert from 'assert';\nimport * as cellUtils from '../pages/articles-viewer/cell-utils';\nimport * as storage from '../common/localStorage';\nimport { routeStem } from '../constants/routes';\n\nconst setCellChildrenLogic = store => next => action => {\n  if (action.type === types.SET_CELL_CHILDREN) {\n    const {\n      parentId,\n      newChildren,\n    } = action.payload;\n    try {\n      const children = store.getState().view.cells[parentId].children;\n      assert.notDeepEqual(children, newChildren);\n      next(action);\n    } catch (e) { }\n  } else {\n    next(action);\n  }\n}\n\nconst fetchCellsLogic = store => next => action => {\n  if (action.type === types.FETCH_CELLS) {\n    axios.get(`${routeStem}/cells`, {\n      params: { ids: action.payload.cellIds }\n    })\n      .then(res => res.data)\n      .then(cellList => {\n        const newCells = mapCellList(cellList);\n        next(actions.insertCells({ cells: newCells }));\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  } else {\n    next(action);\n  }\n}\n\nconst fetchChildCellsLogic = store => next => async action => {\n  if (action.type === types.FETCH_CHILD_CELLS) {\n    try {\n      const cells = store.getState().view.cells;\n      const children = cells[action.payload.cellId].children;\n      let ids = reduceCellsToIds(children);\n      ids.push(action.payload.cellId);\n      const cellList = await axios.get(`${routeStem}/cells`, {\n        params: { ids }\n      }).then(res => res.data)\n      const newCells = mapCellList(cellList);\n      next(actions.insertCells({ cells: newCells }));\n    } catch (e) {\n      console.log(e);\n    }\n  } else {\n    next(action);\n  }\n}\n\nconst fetchChildCellsToggleExpand = store => next => async action => {\n  if (action.type === types.FETCH_CHILD_CELLS_TOGGLE_EXPAND) {\n    const {\n      view,\n      viewPath,\n      cellId,\n      cellVid,\n      isExpanded\n    } = action.payload;\n    if (isExpanded) {\n      next(actions.toggleCellExpand({\n        view,\n        viewPath,\n        cellVid\n      }))\n    } else {\n      try {\n        const cells = store.getState().view.cells;\n        const children = cells[cellId].children;\n        let ids = reduceCellsToIds(children);\n        ids.push(cellId);\n        const cellList = await axios.get(`${routeStem}/cells`, {\n          params: { ids }\n        }).then(res => res.data)\n        const newCells = mapCellList(cellList);\n        next(actions.insertChildCellsToggleExpand({\n          view,\n          viewPath,\n          cellVid,\n          newCells\n        }));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  } else {\n    next(action);\n  }\n}\n\nconst patchContentToggleEditLogic = store => next => async action => {\n  if (action.type === types.PATCH_CONTENT_TOGGLE_EDIT) {\n    const {\n      view,\n      viewPath,\n      cellVid,\n      cellId\n    } = action.payload;\n    const isEditing = view.tabsView[view.currTabId]?.[cellVid]?.isEditing;\n    if (isEditing) {\n      const content = store.getState().view.cells[cellId].content;\n      try {\n        await axios.patch(`${routeStem}/cell-content`, {\n          id: cellId,\n          content: content\n        });\n        next(actions.patchContentToggleEdit({\n          view,\n          viewPath,\n          cellVid,\n          cellId,\n          content\n        }))\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      try {\n        // check if the user is authenticated before allowing them to edit\n        await axios.get(`${routeStem}/is-auth`);\n        next(actions.toggleCellEdit({\n          view,\n          viewPath,\n          cellVid\n        }))\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  } else {\n    next(action);\n  }\n}\n\nconst postNewChildCellExpandLogic = store => next => async action => {\n  if (action.type === types.POST_NEW_CHILD_CELL_EXPAND) {\n    const {\n      view,\n      viewPath,\n      parentId,\n      parentVid,\n      insertIndex = 0\n    } = action.payload;\n    try {\n      let childCells = {};\n      const cells = store.getState().view.cells;\n      const children = cells[parentId].children;\n      let fetchIds = reduceCellsToIds(children);\n      fetchIds.push(parentId);\n      // get updated parent and children cells\n      const cellList = await axios.get(`${routeStem}/cells`, {\n        params: { ids: fetchIds }\n      }).then(res => res.data);\n      childCells = mapCellList(cellList);\n      // make request to post a new cell\n      const { newId, newCell } = await axios.post(`${routeStem}/new-cell`, {\n        parentId,\n        index: insertIndex\n      }).then(res => res.data);\n      // create the new cell in childCells\n      childCells[newId] = { ...newCell, id: newCell._id };\n      next(actions.insertNewChildCellExpand({\n        view,\n        viewPath,\n        parentId,\n        parentVid,\n        newId,\n        insertIndex,\n        childCells\n      }));\n    } catch (e) {\n      console.log(e);\n    }\n  } else {\n    next(action);\n  }\n}\n\nconst deleteChildLogic = store => next => async action => {\n  if (action.type === types.DELETE_CHILD) {\n    const {\n      parentId,\n      childIndex,\n      focusNextCell\n    } = action.payload;\n    try {\n      const cells = store.getState().view.cells;\n      const childId = cells[parentId].children[childIndex].id;\n      await axios.delete(`${routeStem}/link`, {\n        data: {\n          parentId,\n          childId\n        }\n      })\n      next(action);\n      focusNextCell();\n    } catch (e) {\n      console.log(e)\n    }\n  } else {\n    next(action);\n  }\n}\n\nconst localStorageInitLogic = store => next => async action => {\n  if (action.type === types.LOCAL_STORAGE_INIT) {\n    try {\n      const viewTree = storage.getView();\n      if (viewTree) {\n        // local storage exists so recreate the view\n        // get required cell ids used in cached view\n        const idToExpandMap = getViewIds(viewTree);\n        let ids = Object.keys(idToExpandMap);\n        // get updated versions of these cells\n        let cellList = await axios.get(`${routeStem}/cells`, {\n          params: { ids }\n        }).then(res => res.data);\n        let cells = mapCellList(cellList);\n        // some child cells may be implicitly there if never expanded\n        // so fetch these too\n        ids = [];\n        for (const id in idToExpandMap) {\n          // get all child cell ids of this expanded cell\n          if (idToExpandMap[id]) {\n            if(cells[id]) {\n              ids.push(...reduceCellsToIds(cells[id].children));\n            }\n          }\n        }\n        // fetch these potentially missing cells\n        cellList = await axios.get(`${routeStem}/cells`, {\n          params: { ids }\n        }).then(res => res.data);\n        // add them to our cell map\n        for (let i = 0; i < cellList.length; i++) {\n          cells[cellList[i]._id] = cellList[i];\n        }\n        const restoredView = recreateView(viewTree, cells);\n        next(actions.setStore({\n          store: {\n            viewTree: restoredView,\n            cells\n          }\n        }))\n      } else {\n        const email = store.getState().user.email;\n        const user = await axios.get(`${routeStem}/user`, {\n          params: { email }\n        }).then(res => res.data);\n        const initStore = {\n          cells: {\n            [user._id]: { ...user, id: user._id }\n          },\n          viewTree: {\n            id: \"1\",\n            currTabId: user._id,\n            tabs: [{ id: user._id }],\n            tabsView: {\n              [user._id]: {}\n            },\n            children: []\n          }\n        }\n        next(actions.setStore({ store: initStore }));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  } else {\n    next(action);\n  }\n}\n\nconst dragAndDropCellEffectLogic = store => next => async action => {\n  if (action.type === types.DRAG_AND_DROP_CELL_EFFECT) {\n    const {\n      oldParentId,\n      newParentId,\n      childOldIndex,\n      childNewIndex,\n    } = action.payload;\n    try {\n      const cells = store.getState().view.cells;\n      const childId = cells[newParentId].children[childNewIndex].id;\n      if(oldParentId === newParentId) {\n        // move the cell\n        await axios.patch(`${routeStem}/relink-cell`, {\n          oldParentId,\n          newParentId,\n          childId,\n          index: childNewIndex\n        })\n      } else {\n        // link the cell\n        await axios.patch(`${routeStem}/link-cell`, {\n          parentId: newParentId,\n          childId,\n          index: childNewIndex\n        })\n      }\n    } catch (e) {\n      // undo the drag and drop operation\n      console.log(e);\n      if(oldParentId === newParentId) {\n        next(actions.moveChildCell({\n          toParentId: oldParentId,\n          fromParentId: newParentId,\n          fromIndex: childNewIndex,\n          toIndex: childOldIndex\n        }));\n      } else {\n        // since when dragging between articles we just 'copy' the cell we just want\n        // to delete the new copy at the new location\n        next(actions.deleteChild({\n          parentId: newParentId,\n          childIndex: childNewIndex\n        }))\n      }\n    }\n  } else {\n    next(action);\n  }\n}\n\nexport default [\n  fetchCellsLogic,\n  fetchChildCellsLogic,\n  setCellChildrenLogic,\n  fetchChildCellsToggleExpand,\n  patchContentToggleEditLogic,\n  postNewChildCellExpandLogic,\n  deleteChildLogic,\n  localStorageInitLogic,\n  dragAndDropCellEffectLogic\n];\n\nconst mapCellList = cellList => {\n  let cells = {};\n  cellList.forEach(cell => {\n    cells[cell._id] = { ...cell, id: cell._id }\n  })\n  return cells;\n}\n\nconst reduceCellsToIds = cells => {\n  return cells.reduce((ids, cell) => {\n    ids.push(cell.id)\n    return ids;\n  }, []);\n}\n\n// get a map of all (ids => isExpanded) in a view\nconst getViewIds = view => {\n  let ids = {};\n  for (let i = 0; i < view.tabs.length; i++) {\n    ids[view.tabs[i].id] = true;\n  }\n  if (view.tabsView) {\n    for (const id in view.tabsView) {\n      ids[id] = true;\n      for (const vid in view.tabsView[id]) {\n        const id2 = vid.replace(/_[0-9]+$/, '');\n        // if we do not have id or it is expanded then skip\n        if (ids[id2]) continue;\n        ids[id2] = view.tabsView[id][vid].isExpanded;\n      }\n    }\n  }\n  for (let i = 0; i < view.children.length; i++) {\n    const viewIds = getViewIds(view.children[i]);\n    for (const id in viewIds) {\n      if (ids[id]) continue;\n      ids[id] = viewIds[id];\n    }\n  }\n  return ids;\n}\n\n// restore and clean the old saved view\nconst recreateView = (view, cells) => {\n  let tabs = [];\n  // only add available tabs\n  for (let i = 0; i < view.tabs.length; i++) {\n    if (cells[view.tabs[i].id]) {\n      tabs.push(view.tabs[i]);\n    }\n  }\n  // only add available cells\n  let tabsView = {};\n  for (const tabId in view.tabsView) {\n    if (cells[tabId]) {\n      tabsView[tabId] = {};\n      for (const vid in view.tabsView[tabId]) {\n        const id = cellUtils.cellVidToId(vid);\n        if (cells[id]) {\n          tabsView[tabId][vid] = view.tabsView[tabId][vid];\n        }\n      }\n    }\n  }\n  // recursively do the same for all child views\n  let children = [];\n  for (let i = 0; i < view.children.length; i++) {\n    children.push(recreateView(view.children[i], cells));\n  }\n  return {\n    ...view,\n    tabs,\n    tabsView,\n    children\n  }\n}","import * as types from './actionTypes';\n\nexport function login({\n  email,\n  password\n}) {\n  return ({\n    type: types.LOGIN,\n    payload: arguments[0],\n  })\n}\n\nexport function logout() {\n  return ({\n    type: types.LOGOUT,\n  })\n}\n\nexport function updateAuthStatus() {\n  return ({\n    type: types.UPDATE_AUTH_STATUS,\n  })\n}","import history from '../common/history';\nimport * as authActions from './auth-actions';\nimport axios from '../common/api-client';\nimport * as types from './actionTypes';\nimport * as routes from '../constants/routes';\nimport { setToken, deleteToken } from '../common/localStorage';\n\nconst loginLogic = store => next => async action => {\n  if(action.type === types.LOGIN) {\n    const {\n      email,\n      password\n    } = action.payload;\n    try {\n      const data = await axios.post(`${routes.routeStem}/login`, {\n        email,\n        password,\n      }).then(res => res.data);\n      setToken(data);\n      history.push(routes.home);\n      next(action);\n    } catch (e) {\n      console.log(e);\n    }\n  } else {\n    next(action);\n  }\n}\n\nconst logoutLogic = store => next => async action => {\n  if(action.type === types.LOGOUT) {\n    try {\n      deleteToken();\n      next(action);\n    } catch(e) {\n      console.log(e);\n    }\n  } else {\n    next(action);\n  }\n}\n\nconst updateAuthStatusLogic = store => next => async action => {\n  if(action.type === types.UPDATE_AUTH_STATUS) {\n    try {\n      await axios.get(`${routes.routeStem}/is-auth`)\n      next(authActions.login({}))\n    } catch (e) {\n      next(authActions.logout())\n      console.log(e);\n    }\n  } else {\n    next(action);\n  }\n}\n\nexport default [\n  loginLogic,\n  logoutLogic,\n  updateAuthStatusLogic,\n];","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport viewMiddleware from './view-middleware';\nimport authMiddleware from './auth-middleware';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(...viewMiddleware, ...authMiddleware)\n);\n\nexport default store;","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../redux/auth-actions';\nimport store from '../redux/store';\n\nimport './app-bar.css';\nimport * as routes from '../constants/routes';\n\nfunction AppBar(props) {\n  const { loggedIn } = props;\n  const handleMenuClick = () => {\n    props.setNavMenuOpen(props.navMenuOpen ? false : true);\n  };\n  const handleLogout = () => { store.dispatch(logout()) }\n  return (\n    <div className=\"app-bar\">\n      <IconButton edge=\"start\" onClick={handleMenuClick}>\n        <MenuIcon />\n      </IconButton>\n      {loggedIn\n      ? <Link className=\"auth-link\" to={routes.login} onClick={handleLogout}>Log Out</Link>\n      : (\n        <>\n          <Link className=\"auth-link\" to={routes.login}>Login</Link>\n        </>\n      )}\n    </div>\n  );\n}\n\nAppBar.propTypes = {\n  navMenuOpen: PropTypes.bool,\n  setNavMenuOpen: PropTypes.func\n};\n\nexport default connect(\n  (state) => ({\n    loggedIn: state.user.loggedIn\n  }),\n  null,\n)(AppBar);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(() => ({\n  navPane: {\n    display: \"flex\",\n    flexFlow: \"column\",\n    height: \"inherit\",\n    overflowY: \"scroll\",\n    overflowX: \"auto\",\n    backgroundColor: \"white\",\n    transition: \"flex 0.3s ease-out\",\n    flex: 0\n  },\n  drawer: {\n    border: \"1px solid blue\"\n  },\n  drawerExpanded: {\n    flexBasis: \"250px\"\n  },\n  drawerPaper: {\n    display: \"flex\",\n    overflowY: \"scroll\",\n    overflowX: \"auto\",\n    border: \"1px solid red\",\n    position: \"static\"\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  }\n}));\n\nexport default function NavPane(props) {\n  const classes = useStyles();\n  const handleCloseNavPane = () => {\n    props.setNavMenuOpen(false);\n  };\n  return (\n    <div\n      className={clsx(\n        classes.navPane,\n        props.navMenuOpen && classes.drawerExpanded\n      )}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={handleCloseNavPane}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n    </div>\n  );\n}\n\nNavPane.propTypes = {\n  navMenuOpen: PropTypes.bool,\n  setNavMenuOpen: PropTypes.func\n};\n","import React from \"react\"\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\"\nimport { ReactSortable } from \"react-sortablejs\";\nimport \"./cell-tree.css\"\nimport clsx from 'clsx'\nimport {\n  setCellChildren,\n  dragAndDropCellEffect\n} from \"../../redux/actions\";\nimport * as cellUtils from './cell-utils'\nimport store from '../../redux/store';\n\n// ReactSortable.prototype.onChoose = function (evt) { };\n// ReactSortable.prototype.onUnchoose = function (evt) { };\n\nconst dragGroup = () => ({\n  name: \"cells\",\n  put: (to, from, el) => {\n    const toChilds = store.getState().view.cells[to.options.cellId].children;\n    // If the target article already contains a cell with the same id don't add it\n    const cellId = el.getAttribute(\"cellid\");\n    for (let i = 0; i < toChilds.length; i++) {\n      if (toChilds[i].id === cellId) return false;\n    }\n    return true;\n  },\n  // pull: \"clone\"\n  pull: (to, from, el) => {\n    // if dragging between cells between different views then clone\n    // if (to.options.viewId !== from.options.viewId) {\n    //   return \"clone\";\n    // }\n    // if dragging between two different lists then cline\n    if (to.options.cellId !== from.options.cellId) {\n      return \"clone\";\n    }\n    // if dragging between cells within the same view then move the cells\n    return true;\n  }\n})\n\nclass CellTree extends React.Component {\n  constructor(props) {\n    super(props)\n    this.cellIndex = 0;\n    this.cellIdCount = {};\n  }\n\n  componentDidUpdate() {\n    this.cellIndex = 0;\n    this.cellIdCount = {};\n  }\n\n  countCellId = cellId => {\n    let count = this.cellIdCount[cellId];\n    count = count ? count + 1 : 1;\n    this.cellIdCount[cellId] = count;\n    return count;\n  }\n\n  getCellIdCount = cellId => {\n    const count = this.cellIdCount[cellId];\n    return count ? count + 1 : 1;\n  }\n\n  handleSort = evt => {\n    // only allow drag and drop cell effect if dragging between cell divs\n    if (evt.srcElement !== evt.from) return;\n    const cellClassName = evt.from.getAttribute('class').split(/\\s*/)[0];\n    if (!evt.to.getAttribute('class').match(cellClassName)) return;\n    this.props.dragAndDropCellEffect({\n      oldParentId: cellUtils.cellVidToId(evt.from.id),\n      newParentId: cellUtils.cellVidToId(evt.to.id),\n      childOldIndex: evt.oldIndex,\n      childNewIndex: evt.newIndex,\n    });\n  }\n\n  render() {\n    return (\n      <CellTreeRecurse\n        isRoot={true}\n        cellId={this.props.view.currTabId}\n        renderCell={this.props.renderCell}\n        view={this.props.view}\n        cells={this.props.cells}\n        showScaffolding={this.props.showScaffolding}\n        setCellChildren={this.props.setCellChildren}\n        countCell={() => this.cellIndex++}\n        countCellId={this.countCellId}\n        handleSort={this.handleSort}\n        articlePxWidth={this.props.articlePxWidth}\n      />\n    )\n  }\n}\n\nCellTree.propTypes = {\n  view: PropTypes.object.isRequired,\n  renderCell: PropTypes.func.isRequired,\n  articlePxWidth: PropTypes.string\n}\n\nfunction CellTreeRecurse(props) {\n  const {\n    isRoot,\n    cellId,\n    renderCell,\n    view,\n    cells,\n    setCellChildren,\n    countCell,\n    countCellId,\n    handleSort,\n    showScaffolding,\n    articlePxWidth\n  } = props;\n  const children = cells[cellId]?.children || [];\n  const cellVid = cellUtils.makeCellVid({\n    cellId, count: countCellId(cellId)\n  });\n  const isExpanded = view.tabsView[view.currTabId]?.[cellVid]?.isExpanded;\n  const isEmpty = children.length === 0;\n  return (\n    <div className=\"cell-tree\" cellid={cellId} cellvid={cellVid}>\n      {!isRoot && renderCell({ cellId, cellVid, cellIndex: countCell() })}\n      {(isExpanded || isRoot) && (\n        <ReactSortable\n          className={\n            clsx('cell-list', isEmpty && 'empty-article', isRoot && 'root-list')\n          }\n          group={dragGroup()}\n          list={children}\n          setList={newChildren => {\n            setCellChildren({\n              parentId: props.cellId,\n              newChildren\n            })\n          }}\n          style={{\n            width: `${isEmpty ? articlePxWidth : 'fit-content'}`,\n            border: `${(showScaffolding || (isExpanded && isEmpty)) ? '1px dashed white' : 'none'}`,\n          }}\n          viewId={view.id}\n          cellId={cellId}\n          id={cellVid}\n          handle=\".cell-handle\"\n          onSort={handleSort}\n          onStart={cellUtils.handleDragStart}\n          onEnd={cellUtils.handleDragEnd}\n        >\n          {children.map((child, index) => {\n            return (\n              <CellTreeRecurse\n                key={child.id}\n                cellId={child.id}\n                renderCell={props.renderCell}\n                view={props.view}\n                cells={cells}\n                setCellChildren={setCellChildren}\n                showScaffolding={showScaffolding}\n                countCell={countCell}\n                countCellId={countCellId}\n                handleSort={handleSort}\n                articlePxWidth={articlePxWidth}\n              />\n            )\n          })}\n        </ReactSortable>\n      )}\n    </div>\n  )\n}\n\nCellTreeRecurse.propTypes = {\n  isRoot: PropTypes.bool,\n  cellId: PropTypes.string.isRequired,\n  renderCell: PropTypes.func.isRequired,\n  view: PropTypes.object.isRequired,\n  cells: PropTypes.object.isRequired,\n  setCellChildren: PropTypes.func,\n  countCell: PropTypes.func,\n  countCellId: PropTypes.func,\n  handleSort: PropTypes.func,\n}\n\nCellTreeRecurse.defaultProps = {\n  isRoot: false,\n  cellIndex: -1\n}\n\nexport default connect(\n  state => ({\n    cells: state.view.cells,\n    showScaffolding: state.view.showScaffolding,\n  }),\n  {\n    setCellChildren,\n    dragAndDropCellEffect\n  }\n)(CellTree);","import React from 'react';\nimport {\n\tExpandMoreRounded,\n\tChevronRightRounded,\n\tArrowDropDownRounded,\n\tArrowRightRounded,\n} from \"@material-ui/icons\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport \"./cell-wrapper.css\";\nimport {\n  fetchChildCellsToggleExpand\n} from \"../../redux/actions\";\n\nfunction CellHandle(props) {\n  const {\n    view,\n    viewPath,\n    cellData,\n    fetchChildCellsToggleExpand\n  } = props;\n\n  const onToggleCellExpand = evt => {\n    fetchChildCellsToggleExpand({\n      view,\n      viewPath,\n      cellId: cellData.cellId,\n      cellVid: cellData.cellVid,\n      isExpanded: cellData.isExpanded\n    })\n  }\n\n  return (\n    <div\n      className=\"cell-handle\"\n      onClick={onToggleCellExpand}\n    >\n      {cellData.children.length > 0 &&\n        (cellData.isEditing ? (\n        cellData.isExpanded ? (\n          <ExpandMoreRounded\n          fontSize=\"small\"\n          style={{ color: \"white\", width: \"0.9em\" }}\n          />\n        ) : (\n          <ChevronRightRounded\n          fontSize=\"small\"\n          style={{ color: \"white\", width: \"0.9em\" }}\n          />\n        )\n        ) : cellData.isExpanded ? (\n        <ArrowDropDownRounded style={{ color: \"white\", width: \"0.9em\" }} />\n        ) : (\n        <ArrowRightRounded style={{ color: \"white\", width: \"0.9em\" }} />\n        ))}\n      {cellData.isExpanded &&\n        cellData.children.length === 0 &&\n        (cellData.isEditing ? (\n        <ExpandMoreRounded\n          fontSize=\"small\"\n          style={{ color: \"white\", width: \"0.9em\" }}\n        />\n        ) : (\n        <ArrowDropDownRounded style={{ color: \"white\", width: \"0.9em\" }} />\n        ))}\n    </div>\n  )\n}\n\nCellHandle.propTypes = {\n  view: PropTypes.object.isRequired,\n  viewPath: PropTypes.array.isRequired,\n  cellData: PropTypes.object.isRequired\n}\n\nexport default connect(\n  null,\n  { fetchChildCellsToggleExpand }\n)(CellHandle);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport {\n  toggleCellEdit,\n  fetchChildCellsToggleExpand,\n  patchContentToggleEdit,\n  postNewChildCellExpand,\n  deleteChild\n} from \"../../redux/actions\";\nimport \"./cell-wrapper.css\";\nimport CellHandle from './cell-handle';\nimport * as cellUtils from './cell-utils';\n\nlet refs = {};\nlet newCellIndex = null;\n\nclass CellWrapper extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isFocused: false\n    }\n    this.contentRef = null;\n    this.myRefKey = this.getRefKey(this.props.cellData.cellVid);\n  }\n\n  componentDidMount() {\n    this.scrollContentIntoView();\n    if(this.props.cellData.cellIndex === newCellIndex) {\n      this.contentRef.focus({ preventScroll: true });\n      newCellIndex = null;\n    }\n  }\n\n  getRefKey = cellVid => {\n    const viewId = this.props.view.id;\n    const tabId = this.props.view.currTabId;\n    return `${viewId}_${tabId}_${cellVid}`;\n  }\n\n  render() {\n    const {\n      view,\n      viewPath,\n      cellData\n    } = this.props;\n\n    return (\n      <div\n        ref={el => { this.wrapperRef = el }}\n        className=\"cell-wrapper\"\n        style={{ width: this.getArticlePxWidth() }}\n        onClick={() => { this.wrapperRef.focus({ preventScroll: true }) }}\n      >\n        <CellHandle\n          view={view}\n          viewPath={viewPath}\n          cellData={cellData}\n        />\n        <div\n          tabIndex={-1}\n          onBlur={() => { this.setState({ isFocused: false }) }}\n          ref={this.onContentRef}\n          className={this.getContentClassname()}\n          onKeyDown={this.onKeyDown}\n          id={this.getRefKey(cellData.cellVid)}\n          onFocus={this.onFocusContent}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n\n  onKeyDown = evt => {\n    const {\n      view,\n      viewPath,\n      cellData\n    } = this.props\n    const {\n      cellId,\n      cellVid,\n      cellIndex\n    } = cellData;\n    if (evt.key.match(/^[jJ]$/)) {\n      evt.stopPropagation();\n      if(this.getIsCellBottomHidden() && evt.key === 'j') {\n        this.props.articleRef.scroll({\n          top: this.props.articleRef.scrollTop + 50,\n          left: this.props.articleRef.scrollLeft,\n          behavior: 'smooth'\n        })\n      } else {\n        this.focusNextCell(true);\n      }\n    } else if (evt.key.match(/^[kK]$/)) {\n      evt.stopPropagation();\n      if(this.getIsCellTopHidden() && evt.key === 'k') {\n        this.props.articleRef.scroll({\n          top: this.props.articleRef.scrollTop - 50,\n          left: this.props.articleRef.scrollLeft,\n          behavior: 'smooth'\n        })\n      } else {\n        this.focusNextCell(false);\n      }\n    } else if (evt.key === \"i\" || (evt.shiftKey && evt.key === \"Enter\")) {\n      this.props.patchContentToggleEdit({\n        view,\n        viewPath,\n        cellVid,\n        cellId\n      })\n      this.contentRef.focus({ preventScroll: true });\n    } else if (evt.key === \"Enter\") {\n      this.props.fetchChildCellsToggleExpand({\n        view,\n        viewPath,\n        cellId,\n        cellVid,\n        isExpanded: this.getIsExpanded(cellVid)\n      })\n    } else if (evt.key === \"a\" || evt.key === \"A\") {\n      const childCount = this.props.cells[cellId].children.length;\n      this.props.postNewChildCellExpand({\n        view,\n        viewPath,\n        parentId: cellId,\n        parentVid: cellVid,\n        insertIndex: evt.key === \"a\" ?\n          0 : childCount \n      })\n      newCellIndex = evt.key === \"a\" ?\n        cellIndex + 1 : cellIndex + childCount + 1;\n    } else if (evt.key === \"o\" || evt.key === \"O\") {\n      const { childIndex, parentId, parentVid } = this.getParentCellData();\n      this.props.postNewChildCellExpand({\n        view,\n        viewPath,\n        parentId,\n        parentVid,\n        insertIndex: evt.key === \"o\" ? childIndex + 1 : childIndex\n      })\n      newCellIndex = evt.key === \"o\" ?\n        cellIndex + 1 : cellIndex;\n    } else if (evt.key === \"D\") {\n      const { childIndex, parentId } = this.getParentCellData();\n      this.props.deleteChild({\n        parentId,\n        childIndex,\n        focusNextCell: () => {\n          this.focusNextCell(cellIndex === 0);\n        }\n      })\n    }\n  }\n\n  getArticlePxWidth = () => {\n    return this.props.articleRef ?\n      `${this.props.articleRef.clientWidth}px` : '0px';\n  }\n\n  getIsCellTopHidden = () => {\n    return this.wrapperRef.offsetTop < this.props.articleRef.scrollTop;\n  }\n\n  getIsCellBottomHidden = () => {\n    const wrapperBottom = this.wrapperRef.offsetTop + this.wrapperRef.offsetHeight;\n    const windowBottom = this.props.articleRef ?\n      this.props.articleRef.scrollTop + this.props.articleRef.offsetHeight : 0;\n    return wrapperBottom > windowBottom;\n  }\n\n  getParentCellData = () => {\n    let el = this.wrapperRef;\n    const cellId = this.props.cellData.cellId;\n    while(el.className !== 'cell-tree' || el.getAttribute('cellid') === cellId) {\n      el = el.parentNode;\n    }\n    const parentId = el.getAttribute('cellid');\n    let index = 0;\n    const children = this.props.cells[parentId].children;\n    for(; index < children.length; index++) {\n      if(children[index].id === cellId) break;\n    }\n    return {\n      parentId,\n      childIndex: index,\n      parentVid: el.getAttribute('cellvid')\n    };\n  }\n\n  focusNextCell = isDown => {\n    const vidList = cellUtils.getCellVidList({\n      cellId: this.props.view.currTabId,\n      cells: this.props.cells,\n      getIsExpanded: this.getIsExpanded\n    });\n    const cellIndex = this.props.cellData.cellIndex;\n    let index = isDown ? cellIndex + 1 : cellIndex - 1;\n    if (index < 0 || index >= vidList.length) {\n      index = isDown ? 0 : vidList.length - 1;\n    }\n    const nextRefKey = this.getRefKey(vidList[index]);\n    // refs[nextRefKey] && refs[nextRefKey].focus({ preventScroll: true });\n    document.getElementById(nextRefKey).focus();\n  }\n\n  getIsExpanded = cellVid => {\n    const view = this.props.view;\n    return Boolean(view.tabsView[view.currTabId]?.[cellVid]?.isExpanded);\n  }\n\n  onContentRef = el => {\n    if (el) {\n      this.contentRef = el;\n      refs[this.myRefKey] = el;\n    }\n  }\n\n  onFocusContent = () => {\n    this.setState({ isFocused: true })\n    this.scrollContentIntoView();\n  }\n\n  scrollContentIntoView = () => {\n    let block = \"center\";\n    if(this.wrapperRef.clientHeight > this.props.articleRef?.clientHeight) {\n      block = \"start\";\n    }\n    if (this.wrapperRef) this.wrapperRef.scrollIntoView({\n      behavior: \"smooth\",\n      block,\n      inline: \"center\"\n    })\n  }\n\n  getContentClassname = () => {\n    return this.state.isFocused ? \"content-wrapper-focused\" : \"content-wrapper\";\n  }\n}\n\nCellWrapper.propTypes = {\n  view: PropTypes.object.isRequired,\n  viewPath: PropTypes.array.isRequired,\n  cellData: PropTypes.object.isRequired,\n  articleRef: PropTypes.object\n}\n\nexport default connect(\n  state => ({\n    cells: state.view.cells\n  }),\n  {\n    toggleCellEdit,\n    fetchChildCellsToggleExpand,\n    patchContentToggleEdit,\n    postNewChildCellExpand,\n    deleteChild\n  }\n)(CellWrapper);","/* @flow */\nlet pendingScripts = [];\nlet pendingCallbacks = [];\nlet needsProcess = false;\n\n/*\n * Process math in a script node using MathJax.\n */\nfunction process(\n  MathJax: Object,\n  script: HTMLScriptElement,\n  callback: () => void\n) {\n  pendingScripts.push(script);\n  pendingCallbacks.push(callback);\n  if (!needsProcess) {\n    needsProcess = true;\n    // setTimeout(() => doProcess(MathJax), 0);\n    doProcess(MathJax);\n  }\n}\n\nfunction doProcess(MathJax: Object) {\n  MathJax.Hub.Queue(() => {\n    const oldElementScripts = MathJax.Hub.elementScripts;\n    MathJax.Hub.elementScripts = element => pendingScripts;\n\n    try {\n      return MathJax.Hub.Reprocess(null, () => {\n        // Trigger all of the pending callbacks before clearing them\n        // out.\n        pendingCallbacks.forEach(callback => {\n          callback();\n        });\n\n        pendingScripts = [];\n        pendingCallbacks = [];\n        needsProcess = false;\n      });\n    } catch (e) {\n      // IE8 requires `catch` in order to use `finally`\n      throw e;\n    } finally {\n      MathJax.Hub.elementScripts = oldElementScripts;\n    }\n  });\n}\n\nexport default process;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport process from \"./process\";\n\nconst types = {\n  ascii: \"asciimath\",\n  tex: \"tex\"\n};\n\nclass Node extends React.Component {\n  /**\n   * Render the math once the node is mounted\n   */\n  componentDidMount() {\n    this.typeset();\n  }\n\n  /**\n   * Update the jax, force update if the display mode changed\n   */\n  componentDidUpdate(prevProps) {\n    const forceUpdate =\n      prevProps.children !== this.props.children ||\n      prevProps.inline !== this.props.inline;\n    this.typeset(forceUpdate);\n  }\n\n  /**\n   * Prevent update when the source has not changed\n   */\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return (\n      nextProps.children !== this.props.children ||\n      nextProps.inline !== this.props.inline\n    );\n  }\n\n  /**\n   * Clear the math when unmounting the node\n   */\n  componentWillUnmount() {\n    this.clear();\n  }\n\n  /**\n   * Clear the jax\n   */\n  clear() {\n    const MathJax = this.context.MathJax;\n\n    if (!this.script) {\n      return;\n    }\n\n    const jax = MathJax.Hub.getJaxFor(this.script);\n\n    if (jax) {\n      jax.Remove();\n    }\n  }\n\n  /**\n   * Update math in the node\n   * @param { Boolean } forceUpdate\n   */\n  typeset(forceUpdate) {\n    const { MathJax } = this.context;\n\n    if (!MathJax) {\n      throw Error(\n        \"Could not find MathJax while attempting typeset! Probably MathJax script hasn't been loaded or MathJax.Context is not in the hierarchy\"\n      );\n    }\n\n    const text = this.props.children;\n\n    if (forceUpdate) {\n      this.clear();\n    }\n\n    if (forceUpdate || !this.script) {\n      this.setScriptText(text);\n    }\n    MathJax.Hub.Queue(MathJax.Hub.Reprocess(this.script, this.props.onRender));\n    process(MathJax, this.script, this.props.onRender);\n  }\n\n  /**\n   * Create a script\n   * @param { String } text\n   */\n  setScriptText(text) {\n    const inline = this.props.inline;\n    const type = types[this.context.input];\n    if (!this.script) {\n      this.script = document.createElement(\"script\");\n      this.script.type = `math/${type}; ${inline ? \"\" : \"mode=display\"}`;\n      this.refs.node.appendChild(this.script);\n    }\n\n    if (\"text\" in this.script) {\n      // IE8, etc\n      this.script.text = text;\n    } else {\n      this.script.textContent = text;\n    }\n  }\n\n  render() {\n    return React.createElement(\"span\", { ref: \"node\" });\n  }\n}\n\nNode.propTypes = {\n  inline: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  onRender: PropTypes.func\n};\n\nNode.contextTypes = {\n  MathJax: PropTypes.object,\n  input: PropTypes.string\n};\n\nNode.defaultProps = {\n  inline: false,\n  onRender: function onRender() {}\n};\n\nexport default Node;\n","/* global MathJax */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport loadScript from \"load-script\";\n\n/**\n * Context for loading MathJax\n */\nclass Context extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loaded: false };\n    this.unmounted = false;\n  }\n\n  getChildContext() {\n    return {\n      MathJax: typeof MathJax === \"undefined\" ? undefined : MathJax,\n      input: this.props.input\n    };\n  }\n\n  componentDidMount() {\n    const script = this.props.script;\n\n    if (!script) {\n      console.log(\"script not defined\");\n      return this.onLoad();\n    }\n\n    loadScript(script, this.onLoad);\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  onLoad = () => {\n    const options = this.props.options;\n\n    MathJax.Hub.Config(options);\n\n    this.myHook = MathJax.Hub.Register.StartupHook(\"End\", () => {\n      if (this.unmounted) return;\n      MathJax.Hub.processSectionDelay = this.props.delay;\n\n      if (this.props.didFinishTypeset) {\n        this.props.didFinishTypeset();\n      }\n\n      if (this.props.onLoad) {\n        this.props.onLoad();\n      }\n\n      if (this.props.hubFn) {\n        this.props.hubFn(MathJax.Hub);\n      }\n      this.setState({\n        loaded: true\n      });\n    });\n\n    MathJax.Hub.Register.MessageHook(\"Math Processing Error\", message => {\n      if (this.props.onError) {\n        this.props.onError(MathJax, message);\n      }\n    });\n  }\n\n  render() {\n    if (!this.state.loaded && !this.props.noGate) {\n      return this.props.loading;\n    }\n\n    return React.Children.only(this.props.children);\n  }\n}\n\nContext.propTypes = {\n  children: PropTypes.node.isRequired,\n  didFinishTypeset: PropTypes.func,\n  script: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([false])]),\n  input: PropTypes.oneOf([\"ascii\", \"tex\"]),\n  delay: PropTypes.number,\n  options: PropTypes.object,\n  loading: PropTypes.node,\n  noGate: PropTypes.bool,\n  hubFn: PropTypes.func // (MathJax.Hub) => void\n};\n\nContext.childContextTypes = {\n  MathJax: PropTypes.object,\n  input: PropTypes.string\n};\n\nContext.defaultProps = {\n  script:\n    \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-MML-AM_CHTML\",\n  // script: \"MathJax-2.7.3/MathJax.js\",\n  // script: \"https://cdn.mathjax.org/mathjax/latest/MathJax.js\",\n  // script: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js\",\n  input: \"ascii\",\n  delay: 0,\n  options: {},\n  loading: null,\n  noGate: false\n};\n\nexport default Context;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Text extends React.Component {\n  componentDidMount() {\n    this.refreshMathJax();\n  }\n\n  componentDidUpdate() {\n    this.refreshMathJax();\n  }\n\n  refreshMathJax() {\n    const { MathJax } = this.context;\n    if (!MathJax) {\n      throw Error(\n        \"Could not find MathJax while attempting typeset! Probably MathJax script hasn't been loaded or MathJax.Context is not in the hierarchy\"\n      );\n    }\n\n    MathJax.Hub.Queue(MathJax.Hub.Typeset(this.div, this.props.onRender));\n  }\n\n  render() {\n    // const { classes, options } = this.props;\n\n    return (\n      <div key={this.props.text} ref={div => (this.div = div)}>\n        {this.props.text}\n      </div>\n    );\n  }\n}\n\nText.contextTypes = {\n  MathJax: PropTypes.object\n};\n\nexport default Text;\n","import Node from \"./Node\";\nimport Context from \"./Context\";\nimport Text from \"./Text\";\n\nexport { Node, Context, Text };\nexport default { Node, Context, Text };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { vs2015 } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\n\n//https://medium.com/young-developer/react-markdown-code-and-syntax-highlighting-632d2f9b4ada\n\nexport default class CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    value: \"\"\n  };\n\n  render() {\n    let { language, value } = this.props;\n    let style = vs2015;\n    if (language === \"text\") {\n      style = undefined;\n    }\n    return (\n      <SyntaxHighlighter language={language} style={style}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport MathJax from \"../../react-mathjax2\";\nimport RemarkMathPlugin from \"remark-math\";\nimport PropTypes from \"prop-types\";\nimport htmlParser from \"react-markdown/plugins/html-parser\";\nimport CodeBlock from \"./code-block.js\";\n\nclass RenderMarkdown2 extends React.PureComponent {\n  static propTypes = {\n    style: PropTypes.object\n  };\n\n  render() {\n    const newProps = {\n      ...this.props,\n      plugins: [RemarkMathPlugin, htmlParser],\n      renderers: {\n        ...this.props.renderers,\n        math: props => <MathJax.Node>{props.value}</MathJax.Node>,\n        inlineMath: props => <MathJax.Node inline>{props.value}</MathJax.Node>,\n        code: CodeBlock\n      }\n    };\n    return (\n      <div className=\"markdown-body\" style={this.props.style}>\n        <MathJax.Context\n          input=\"tex\"\n          options={{\n            asciimath2jax: {\n              useMathMLspacing: true,\n              delimiters: [[\"$\", \"$\"]],\n              preview: \"none\"\n            }\n          }}\n        >\n          <ReactMarkdown {...newProps} />\n        </MathJax.Context>\n      </div>\n    );\n  }\n}\n\nexport default RenderMarkdown2;\n","import React from \"react\";\nimport \"codemirror\";\nimport { Controlled as Codemirror } from \"react-codemirror2\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/html-hint\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/mode/markdown/markdown\";\nimport PropTypes from \"prop-types\";\nimport RenderMarkdown2 from \"./render-markdown2.js\";\nimport \"./github-markdown.css\";\nimport \"./code-mirror.css\";\n\n//https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\n\nclass MarkdownEditor extends React.Component {\n  static propTypes = {\n    initialCode: PropTypes.string,\n    editorStyle: PropTypes.object,\n    onContentChange: PropTypes.func, // (newContent) => void\n    lineNumbers: PropTypes.bool,\n    renderStyle: PropTypes.object,\n    getEditor: PropTypes.func,\n    onFocus: PropTypes.func, // (editor, event) => void\n    lineWrapping: PropTypes.bool,\n    preview: PropTypes.bool,\n    wrapperProps: PropTypes.object\n  };\n\n  static defaultProps = {\n    lineNumbers: true,\n    lineWrapping: true,\n    renderStyle: {},\n    getEditor: cm => {},\n    onFocus: () => {},\n    onContentChange: () => {},\n    preview: true\n  };\n\n  constructor(props) {\n    super(props);\n    const initialCode = props.initialCode ? props.initialCode : \"\";\n    this.state = {\n      code: initialCode\n    };\n    this.options = {\n      lineNumbers: this.props.lineNumbers,\n      mode: \"markdown\",\n      extraKeys: { \"Ctrl-Space\": \"autocomplete\" },\n      lineWrapping: this.props.lineWrapping,\n      smartIndent: false,\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.editor.focus();\n    }, 0);\n    this.props.getEditor(this.editor);\n    this.refs.wrap.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\n  }\n\n  updateCode = (editor, data, value) => {\n    this.setState({\n      code: value\n    });\n  };\n\n  render() {\n    return (\n      <div\n        ref=\"wrap\"\n        style={{ ...this.props.editorStyle, scrollBehavior: \"smooth\" }}\n        {...this.props.wrapperProps}\n      >\n        <Codemirror\n          ref={el => (this.cm = el)}\n          editorDidMount={editor => {\n            this.editor = editor;\n          }}\n          value={this.state.code}\n          onBeforeChange={this.updateCode}\n          onChange={(editor, data, value) => this.props.onContentChange(value)}\n          options={this.options}\n          onFocus={(editor, evt) => {evt.preventDefault()}}\n        />\n        {this.props.preview && (\n          <div style={{ backgroundColor: \"transparent\" }}>\n            <RenderMarkdown2\n              source={this.state.code}\n              style={this.props.renderStyle}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MarkdownEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport MarkdownEditor from \"./markdown-editor\";\nimport RenderMarkdown2 from \"./render-markdown2\";\nimport {\n  setCellContent,\n} from \"../../redux/actions\";\n\nfunction MarkdownCell(props) {\n  const cellData = {\n    content: \"*fetching content...*\",\n    ...props.cellData\n  }\n  const onEditorKeyDown = evt => {\n    if (!(evt.shiftKey && evt.key === \"Enter\")) {\n      evt.stopPropagation();\n    }\n  }\n  const onContentChange = content => {\n    props.setCellContent({\n      cellId: cellData.cellId,\n      content\n    })\n  }\n  return (\n    <React.Fragment>\n      {cellData.isEditing ? (\n        <MarkdownEditor\n          initialCode={cellData.content}\n          renderStyle={{ padding: '0 0.5em 0 0.5em' }}\n          onContentChange={content => { onContentChange(content) }}\n          wrapperProps={{\n            onKeyDown: evt => { onEditorKeyDown(evt) },\n          }}\n        />\n      ) : (\n          <RenderMarkdown2 source={cellData.content} />\n        )}\n    </React.Fragment>\n  )\n}\n\nMarkdownCell.propTypes = {\n  view: PropTypes.object.isRequired,\n  cellData: PropTypes.object.isRequired\n}\n\nexport default connect(\n  state => ({ cells: state.cells }),\n  { setCellContent }\n)(MarkdownCell);","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport CellTree from \"./cell-tree\"\nimport \"./article.css\"\nimport CellWrapper from './cell-wrapper'\nimport MarkdownCell from \"./markdown-cell\"\nimport {\n  fetchChildCells,\n} from '../../redux/actions'\nimport ReactResizeDetector from 'react-resize-detector'\n\nclass Article extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      resized: false\n    }\n    this.myrefs = {}\n    props.fetchChildCells({ cellId: props.view.currTabId });\n  }\n\n  componentDidMount() {\n    this.articleRef.focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    // when the current tab changes we want to fetch child cells\n    // of the cell with id = currTabId\n    const currTabId = this.props.view.currTabId;\n    if (currTabId !== prevProps.view.currTabId) {\n      this.props.fetchChildCells({ cellId: currTabId });\n    }\n  }\n\n  renderCell = ({ cellId, cellVid, cellIndex }) => {\n    const cellData = {\n      cellId,\n      cellVid,\n      children: [],\n      ...this.props.cells[cellId],\n      ...this.props.view.tabsView[this.props.view.currTabId]?.[cellVid],\n      cellIndex\n    }\n    return (\n        <CellWrapper\n          view={this.props.view}\n          viewPath={this.props.viewPath}\n          cellData={cellData}\n          articleRef={this.articleRef}\n        >\n          <MarkdownCell\n            view={this.props.view}\n            viewPath={this.props.viewPath}\n            cellData={cellData}\n          />\n        </CellWrapper>\n    )\n  }\n\n  getArticlePxWidth = () => {\n    return this.articleRef ?\n      `${this.articleRef.clientWidth}px` : '0px';\n  }\n\n  onKeyDown = evt => {\n    if (evt.key.match(/^[jJ]$/)) {\n      evt.preventDefault();\n      let el = this.articleRef;\n      while(el && !el.className.match(/^cell-wrapper/)) {\n        el = el.firstChild;\n      }\n      const first = el?.children[1];\n      first && first.focus();\n    } else if (evt.key.match(/^[kK]$/)) {\n      evt.preventDefault();\n      let el = this.articleRef;\n      while(el && !el.className.match(/^cell-list/)) {\n        el = el.children[0];\n      }\n      while(el && !el.className.match(/^cell-wrapper/)) {\n        el = el.lastChild;\n      }\n      const last = el?.children[1];\n      last && last.focus();\n    }\n  }\n\n  render() {\n    return (\n      <div\n        tabIndex={-1}\n        className=\"article-plane\"\n        ref={el => { this.articleRef = el }}\n        onClick={this.onBackgroundClick}\n        onKeyDown={this.onKeyDown}\n      >\n        <CellTree\n          view={this.props.view}\n          renderCell={this.renderCell}\n          articlePxWidth={this.getArticlePxWidth()}\n        />\n        <ReactResizeDetector\n          handleWidth\n          handleHeight\n          onResize={() => {\n            this.setState({resized: !this.state.resized})\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nArticle.propTypes = {\n  view: PropTypes.object.isRequired,\n  viewPath: PropTypes.array.isRequired\n}\n\nexport default connect(\n  state => ({\n    cells: state.view.cells,\n    viewTree: state.view.viewTree,\n  }),\n  {\n    fetchChildCells,\n  }\n)(Article)","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  Menu,\n  MenuItem,\n  withStyles\n} from \"@material-ui/core\";\nimport {\n  VerticalSplit,\n  HorizontalSplit,\n  CancelPresentation,\n  Delete,\n  MoreVert\n} from \"@material-ui/icons\";\nimport {\n  splitView,\n  deleteView\n} from \"../../redux/actions\";\n\nconst Hmenu = withStyles({\n  paper: {\n    zIndex: \"1\"\n  },\n  list: {\n    display: \"flex\",\n    padding: 0\n  }\n})(Menu);\n\nclass ViewOptions extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuAnchor: null,\n      deleteMode: false\n    }\n  }\n\n  handleMoreBtnClick = evt => {\n    this.setState({menuAnchor: evt.currentTarget.parentNode});\n  }\n\n  onMenuClose = () => {\n    this.setState({menuAnchor: null});\n  }\n\n  onSplitView = direction => {\n    this.onMenuClose();\n    this.props.splitView({\n      view: this.props.view,\n      viewPath: this.props.viewPath,\n      direction\n    });\n  }\n\n  onDeleteView = () => {\n    this.onMenuClose();\n    this.props.deleteView({\n      viewPath: this.props.viewPath\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"more-btn\"\n          onClick={evt => {this.handleMoreBtnClick(evt)}}\n        >\n          <MoreVert fontSize=\"small\" />\n        </div> \n        <Hmenu\n          anchorEl={this.state.menuAnchor}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"right\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\"\n          }}\n          onClose={this.onMenuClose}\n          getContentAnchorEl={null}\n          open={Boolean(this.state.menuAnchor)}\n        >\n          <MenuItem onClick={() => {this.onSplitView(\"row\")}}>\n            <VerticalSplit />\n          </MenuItem>\n          <MenuItem onClick={() => {this.onSplitView(\"column\")}}>\n            <HorizontalSplit />\n          </MenuItem>\n          {this.props.viewPath.length > 0 && (\n            <MenuItem\n              onClick={this.onDeleteView}\n            >\n              <CancelPresentation />\n            </MenuItem>\n          )}\n        </Hmenu>\n      </React.Fragment>\n    )\n  }\n}\n\nViewOptions.propTypes = {\n  view: PropTypes.object.isRequired,\n  viewPath: PropTypes.array.isRequired\n}\n\nexport default connect(\n  state => ({ cells: state.cells }),\n  { \n    splitView,\n    deleteView\n  }\n)(ViewOptions);","import React from \"react\";\nimport \"./sortable-tabs.css\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport PropTypes from \"prop-types\";\nimport Close from \"@material-ui/icons/Close\";\nimport Add from \"@material-ui/icons/Add\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport {\n  changeTab,\n  setTabs,\n  setTabView,\n  closeTab\n} from \"../../redux/actions\"\nimport assert from \"assert\"\nimport ViewOptions from \"./view-options\"\n\nclass CellTabs extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.myrefs = {};\n    this.tabIdCount = {};\n  }\n\n  onChangeTab = tabId => {\n    if (this.props.view.currTabId !== tabId) {\n      this.props.changeTab({\n        viewPath: this.props.viewPath,\n        tabId\n      })\n    }\n  };\n\n  setTabRef = (el, tabId) => {\n    const key = `tab${tabId}`;\n    if (this.myrefs[key] === undefined && el) {\n      el.scrollIntoView();\n      this.myrefs[key] = el;\n    }\n  };\n\n  handleSort = evt => {\n    if (evt.pullMode) {\n      if (evt.to === this.myrefs[\"sortable-tabs\"]) {\n        // a tab was dropped in from another list\n        const id = this.props.view.tabs[evt.newIndex].id;\n        this.onChangeTab(id);\n      } else if (evt.from === this.myrefs[\"sortable-tabs\"]) {\n        // a tab was dropped into another list\n        if (this.props.view.tabs.length === 0) {\n          this.onChangeTab(0);\n        } else {\n          const inc = evt.oldIndex === this.props.view.tabs.length ? -1 : 0;\n          const ntab = this.props.view.tabs[evt.oldIndex + inc];\n          this.onChangeTab(ntab.id);\n        }\n      }\n    }\n  };\n\n  // to prevent jsx from complaining about duplicate element keys\n  // append the count of the id to the id\n  getTabKey = tabId => {\n    let count = this.tabIdCount[tabId];\n    count = Boolean(count) ? count + 1 : 1;\n    this.tabIdCount[tabId] = count;\n    return `${tabId}_${count}`;\n  };\n\n  onSetTabs = newTabs => {\n    try {\n      assert.deepEqual(this.props.view.tabs, newTabs);\n    } catch (e) {\n      this.props.setTabs({\n        viewPath: this.props.viewPath,\n        newTabs\n      })\n    }\n  }\n\n  /**\n   * For the sortableJs prop in SortableTabs: setData\n   * @param {Object} dataTransfer - CustomEvent from sortablejs\n   * @param {HTMLElement} - el\n   */\n  handleDataOnDrag = (dataTransfer, el) => {\n    // if tab is dragged to another sortable tabs instance add it\n    const tabId = el.getAttribute(\"id\");\n    const tabView = { [tabId]: this.props.view.tabsView[tabId] };\n    if (Boolean(tabView[tabId])) {\n      dataTransfer.setData(\"tabView\", JSON.stringify(tabView));\n    }\n  };\n  /**\n   * For the sortableJs prop in SortableTabs: onAdd\n   * This acts as the recipient function for the dataTransfer between sortablejs objects\n   * Grab the tabsView data from sortablejs sender when it used setData\n   * @param {Object} evt - CustomEvent from sortablejs\n   */\n  handleTabAdd = evt => {\n    // grab the tab view data passed from the other sortable tabs instance and add it to our local state\n    const tabViewJson = evt.originalEvent.dataTransfer.getData(\"tabView\");\n    if (Boolean(tabViewJson)) {\n      const tabView = JSON.parse(tabViewJson);\n      this.props.setTabView({\n        viewPath: this.props.viewPath,\n        tabView\n      })\n    }\n  };\n\n  /**\n   * For SortableTabs prop renderTabContent\n   * @param {Object} tab - tab data\n   * @param {Number|String} tab.id - tab id\n   * @returns {HTMLElement} - the tab element\n   */\n  renderTabContent = tab => {\n    const content = this.props.cells[tab.id]?.content;\n    return (\n      <div style={{ whiteSpace: \"nowrap\", minWidth: \"100px\" }}>{content}</div>\n    );\n  };\n\n  onCloseTab = (evt, tabId, tabIndex) => {\n    evt.stopPropagation();\n    this.props.closeTab({\n      view: this.props.view,\n      viewPath: this.props.viewPath,\n      tabId,\n      tabIndex\n    })\n  }\n\n  render() {\n    this.tabIdCount = {};\n    return (\n      <div\n        className=\"sortable-tabs-toolbar\"\n        onWheel={e => {\n          e.stopPropagation();\n          const delta = this.myrefs.scrollbar.getScrollLeft();\n          this.myrefs[\"scrollbar\"].scrollLeft(delta + e.deltaY);\n          return false;\n        }}\n      >\n        <Scrollbars\n          ref={el => {\n            this.myrefs[\"scrollbar\"] = el;\n          }}\n          style={{ height: \"2.1em\" }}\n          autoHide\n        >\n          <ReactSortable\n            ref={el => {\n              this.myrefs[\"sortable-tabs\"] = el?.ref?.current;\n            }}\n            list={this.props.view.tabs}\n            setList={tabs => { this.onSetTabs(tabs) }}\n            className=\"sortable-tabs\"\n            // filter=\".dummy-tab\"\n            onSort={evt => { this.handleSort(evt) }}\n            setData={this.handleDataOnDrag}\n            onAdd={this.handleTabAdd}\n            group={{\n              name: \"tabs\",\n              put: [\"cells\", \"tabs\"],\n              pull: (to, from) => {\n                if (to.options.group.name === \"cells\") {\n                  return \"clone\";\n                } else if (to.options.group.name === \"tabs\") {\n                  return true;\n                }\n                return false;\n              }\n            }}\n          >\n            {this.props.view.tabs.map((tab, index) => {\n              const key = this.getTabKey(tab.id);\n              // we don't want the option to delete the current user cell\n              const isUserTab = this.props.cells[tab.id].email === this.props.email;\n              return (\n                <div\n                  ref={el => {\n                    this.setTabRef(el, tab.id);\n                  }}\n                  key={key}\n                  id={tab.id}\n                  className={clsx(\n                    tab.id === this.props.view.currTabId\n                      ? \"sel-article-tab\"\n                      : \"article-tab\"\n                  )}\n                  onClick={() => {\n                    this.onChangeTab(tab.id);\n                    this.myrefs[`tab${tab.id}`].scrollIntoView();\n                  }}\n                >\n                  {this.renderTabContent(tab)}\n                  { !isUserTab &&\n                    <div className=\"close-tab-btn-wrapper\">\n                      <div\n                        className=\"close-tab-btn\"\n                        onClick={evt => { this.onCloseTab(evt, tab.id, index) }}\n                      >\n                        <Close\n                          style={{\n                            fontSize: \"14px\",\n                            borderRadius: \"10px\"\n                          }}\n                        />\n                      </div>\n                    </div>\n                  }\n                </div>\n              );\n            })}\n          </ReactSortable>\n        </Scrollbars>\n        <div\n          className=\"add-tab-btn\"\n          onClick={() => { }}\n        >\n          <Add fontSize=\"small\" />\n        </div>\n        <ViewOptions\n          view={this.props.view}\n          viewPath={this.props.viewPath}\n        />\n      </div>\n    );\n  }\n}\n\nCellTabs.propTypes = {\n  view: PropTypes.object.isRequired,\n  viewPath: PropTypes.array.isRequired\n};\n\nexport default connect(\n  state => ({\n    cells: state.view.cells,\n    email: state.user.email,\n  }),\n  {\n    changeTab,\n    setTabs,\n    setTabView,\n    closeTab\n  }\n)(CellTabs)\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Article from \"./article\";\nimport { connect } from \"react-redux\";\nimport {\n  splitView,\n} from \"../../redux/actions\"\nimport CellTabs from \"./cell-tabs\";\nimport \"./articles-viewer.css\"\n\nclass _ArticlesViewer extends React.PureComponent {\n  render() {\n    return (\n      <div\n        key={this.props.view.id}\n        className=\"articles-viewer\"\n        style={{\n          flexFlow: this.props.view.flexFlow,\n        }}\n      >\n        {this.props.view.children.length > 0 ? (\n          this.props.view.children.map((_view, index) => (\n            <ArticlesViewer\n              key={_view.id}\n              view={_view}\n              viewPath={[...this.props.viewPath, \"children\", index]}\n            />\n          ))\n        ) : (\n            <div\n              key={this.props.view.id}\n              className=\"articles-viewer\"\n            >\n              <CellTabs\n                view={this.props.view}\n                viewPath={this.props.viewPath}\n              />\n              {this.props.cells[this.props.view.currTabId] && (\n                <Article\n                  view={this.props.view}\n                  viewPath={this.props.viewPath}\n                />\n              )}\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\n_ArticlesViewer.propTypes = {\n  view: PropTypes.object.isRequired,\n  viewPath: PropTypes.array\n};\n\n_ArticlesViewer.defaultProps = {\n  viewPath: []\n};\n\nconst ArticlesViewer = connect(\n  (state) => ({\n    cells: state.view.cells,\n    viewTree: state.view.viewTree\n  }),\n  { splitView }\n)(_ArticlesViewer);\n\nexport default ArticlesViewer;","import ArticlesViewer from './articles-viewer';\n\nexport default ArticlesViewer;","const mainStyles = {\n  spacing: (x) => `${x * 8}px`,\n  borderRadius: '5px',\n};\n\nconst lightTheme = {\n  ...mainStyles,\n  textBackgroundColor: 'white',\n  textColor: 'black',\n  unfocusedTextColor: 'rgba(0, 0, 0, 0.54)',\n  unfocusedSmallTextColor: 'rgba(0, 0, 0, 0.75)',\n  unfocusedBackgroundColor: '#00000030',\n  unfocusedBorderColor: 'rgba(0, 0, 0, 0.4)',\n  unfocusedInputBorderColor: 'rgba(0, 0, 0, 0.23)',\n  focusedBorderColor: '#da2e76',\n  focusedColor: '#da2e76',\n  headerBackground: 'white',\n  //formBackground: 'linear-gradient(45deg, #b86813 0%,#b83f13 25%,#c4102b 50%,#c5115c 75%,#bb1185 100%)',\n  formBackground: '#272727ff',\n  errorColor: '#f44336',\n  dashboardBackground: '#f2f2f2',\n  buttonBorderColor: '#222222',\n  buttonFillColor: 'white',\n  primaryButtonFillColor: '#c31163',\n  secondaryButtonFillColor: '#ed4956',\n  maxFeedWidth: '800px',\n};\n\nconst darkTheme = {\n  ...mainStyles,\n  textBackgroundColor: 'black',\n  textColor: 'white',\n  unfocusedTextColor: 'grey',\n  focusedBorderColor: 'white',\n  unfocusedInputBorderColor: 'grey',\n};\n\nexport default lightTheme;\n","import styled from 'styled-components';\nimport { TextField as MuiTextField } from '@material-ui/core';\n\nconst TextField = styled(MuiTextField)`\n  && {\n    display: block;\n    margin-bottom: ${(props) => props.theme.spacing(2)};\n  },\n  && input {\n    color: ${(props) => props.theme.textColor};\n  }\n  && .MuiFormLabel-root {\n    color: ${(props) => props.theme.unfocusedTextColor};\n  },\n  && .MuiOutlinedInput-root > fieldset {\n    border-color: ${(props) => props.theme.unfocusedInputBorderColor};\n  }\n  && .Mui-focused > fieldset {\n    border-color: ${(props) => props.theme.focusedBorderColor};\n  }\n  && .Mui-error > fieldset {\n    border-color: ${(props) => props.theme.errorColor};\n  }\n`;\n\nexport default TextField;\n","import styled from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport { emphasize, fade, darken } from '@material-ui/core/styles/colorManipulator';\n\nexport const Page = styled.div`\n  height: 100%;\n  width: 100%;\n  background: ${(props) => props.theme.formBackground};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n  width: calc(100% - ${(props) => props.theme.spacing(5)});\n  padding: ${(props) => props.theme.spacing(4)};\n  max-width: 290px;\n  display: flex;\n  flex-flow: column;\n  justify-content: space-between;\n  box-sizing: border-box;\n  background-color: ${(props) => props.theme.textBackgroundColor};\n  color: ${(props) => props.theme.textColor};\n  box-shadow: 3px 3px 10px 3px rgba(0,0,0,0.425);\n  border-radius: ${(props) => props.theme.borderRadius};\n`;\n\nexport const Title = styled.h1`\n  font-size: 30px;\n  color: ${(props) => props.theme.textColor};\n  text-align: center;\n  margin-top: 0;\n`;\n\nexport const Intro = styled.div`\n  font-size: 18px;\n  text-align: center;\n  color: ${(props) => props.theme.unfocusedTextColor};\n  font-weight: bold;\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n`;\n\nexport const Submit = styled(Button)`\n  && {\n    background-color: ${(props) => props.theme.primaryButtonFillColor};\n    color: white;\n    font-weight: bold;\n  },\n  &&:hover {\n    background-color: ${(props) => emphasize(props.theme.primaryButtonFillColor)};\n  }\n`;\n\nexport const Error = styled.div`\n  text-align: center;\n  padding: ${(props) => props.theme.spacing(1)};\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n  width: 100%; \n  color: ${(props) => darken(props.theme.errorColor, 0.2)};\n  background-color: ${((props) => fade(props.theme.errorColor, 0.2))};\n  box-sizing: border-box;\n  border-radius: ${(props) => props.theme.borderRadius};\n  font-size: 15px;\n`;\n\nexport const Modal = styled.div`\n  z-index: 1300;\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow: auto;\n  display: flex;\n  flex-flow: column;\n  justify-content: flex-start;\n  align-items: center;\n  padding: ${(props) => props.theme.spacing(6)} 0;\n  background-color: #00000077;\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n`;\n","import React from 'react';\nimport history from '../../common/history';\nimport TextField from '../../components/text-field';\nimport * as Form from '../../components/form-page';\nimport store from '../../redux/store';\nimport * as routes from '../../constants/routes';\nimport * as authActions from '../../redux/auth-actions';\n\nexport default function Login() {\n  const [errorMsg, setErrorMsg] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    store.dispatch(authActions.login({ email, password }));\n  }\n  const handleEmailChange = (e) => {\n    setErrorMsg('');\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setErrorMsg('');\n    setPassword(e.target.value);\n  };\n  return (\n    <Form.Page>\n      <Form.Form>\n        <Form.Title>Log In</Form.Title>\n        <TextField label=\"Email\" variant=\"outlined\" onChange={handleEmailChange} />\n        <TextField label=\"Password\" variant=\"outlined\" type=\"password\" onChange={handlePasswordChange} />\n        {errorMsg && <Form.Error>{errorMsg}</Form.Error>}\n        <Form.Submit onClick={handleSubmit}>Log In</Form.Submit>\n      </Form.Form>\n    </Form.Page>\n  )\n}","import React from \"react\";\nimport {\n  Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport assert from \"assert\";\nimport { connect } from \"react-redux\";\nimport { ThemeProvider } from 'styled-components';\n\nimport AppBar from \"./components/app-bar\";\nimport NavPane from \"./components/nav-pane\";\nimport ArticlesViewer from \"./pages/articles-viewer\";\nimport { localStorageInit } from \"./redux/actions\";\nimport { updateAuthStatus } from './redux/auth-actions';\nimport './App.css';\nimport history from './common/history';\nimport * as storage from './common/localStorage';\nimport * as routes from './constants/routes';\nimport theme from './constants/theme';\nimport Login from './pages/login';\nimport store from './redux/store';\n\nclass App extends React.Component {\n  state = {\n    navMenuOpen: false,\n    view: {\n      id: \"1\",\n      currTabId: 0,\n      tabs: [],\n      tabsView: {},\n      children: []\n    },\n    articles: {}\n  };\n\n  componentDidMount() {\n    store.dispatch(localStorageInit());\n    store.dispatch(updateAuthStatus());\n    // When changing the route to the home page we want to reinitialize the local storage\n    // in case there are any changes in authentication or just updates in the blog\n    history.listen((location) => {\n      store.dispatch(updateAuthStatus());\n      if (location.pathname === routes.home) store.dispatch(localStorageInit());\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    try {\n      assert.deepStrictEqual(prevProps.viewTree, this.props.viewTree);\n    } catch (e) {\n      // they are different update the view in local storage\n      storage.setView(this.props.viewTree)\n    }\n  }\n\n  setNavMenuOpen = arg => {\n    const open = typeof arg === \"function\" ? arg(this.state.navMenuOpen) : arg;\n    this.setState({ navMenuOpen: open });\n  };\n\n  render() {\n    return (\n      <Router history={history}>\n        <ThemeProvider theme={theme}>\n          <div className=\"view-port\">\n            <AppBar\n              navMenuOpen={this.state.navMenuOpen}\n              setNavMenuOpen={this.setNavMenuOpen}\n            />\n            <div className=\"not-header\">\n              <NavPane\n                navMenuOpen={this.state.navMenuOpen}\n                setNavMenuOpen={this.setNavMenuOpen}\n              />\n              <Switch>\n                <Route exact path={routes.home}>\n                  <ArticlesViewer view={this.props.viewTree} />\n                </Route>\n                <Route path={routes.login} component={Login} />\n              </Switch>\n            </div>\n          </div>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cells: state.view.cells,\n  viewTree: state.view.viewTree,\n})\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport App from \"./App\";\nimport './index.css';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}